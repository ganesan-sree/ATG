package com.ff.user;

import java.io.IOException;
import java.text.MessageFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.Map.Entry;

import javax.servlet.ServletException;

import com.ff.constant.FFConstant;
import com.ff.help.FFUtils;

import atg.core.util.ResourceUtils;
import atg.droplet.DropletException;
import atg.servlet.DynamoHttpServletRequest;
import atg.servlet.DynamoHttpServletResponse;
import atg.userprofiling.ProfileFormHandler;

public class FFUserProfileFormHandler extends ProfileFormHandler {
	
	public String firstName;
	public String lastName;
	public String email;
	public String password;
	public String confirmPassword;
	public String country;
	public String state;
	public String city;
	public String zipcode;
	public String login;
	public String gender;
	public FFUtils FFUtils;
	public String successURL;
	public String errorURL;
	public FFConstant FFConstant;
	public String getErrorURL() {
		return errorURL;
	}
	public void setErrorURL(String errorURL) {
		this.errorURL = errorURL;
	}
	public String getSuccessURL() {
		return successURL;
	}
	public void setSuccessURL(String successURL) {
		this.successURL = successURL;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public String getConfirmPassword() {
		return confirmPassword;
	}
	public void setConfirmPassword(String confirmPassword) {
		this.confirmPassword = confirmPassword;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getGender() {
		return gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getLogin() {
		return login;
	}
	public void setLogin(String login) {
		this.login = login;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}
	public String getZipcode() {
		return zipcode;
	}
	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}
	public FFUtils getFFUtils() {
		return FFUtils;
	}
	public void setFFUtils(FFUtils utils) {
		FFUtils = utils;
	}
	public boolean handleCreate(DynamoHttpServletRequest pRequest,DynamoHttpServletResponse pResponse) throws ServletException, IOException
	{
		firstName=(String)getValueProperty(FFConstant.firstName);
		lastName=(String)getValueProperty(getFFConstant().lastName);
		email=(String)getValueProperty(getFFConstant().email);
		password=(String)getValueProperty(getFFConstant().password);
		confirmPassword=(String)getValueProperty(getFFConstant().confirmPassword);
		country=(String)getValueProperty(getFFConstant().country);
		state=(String)getValueProperty(getFFConstant().state);
		city=(String)getValueProperty(getFFConstant().city);
		login=(String)getValueProperty(getFFConstant().login);
		zipcode=(String)getValueProperty(getFFConstant().zipCode);
		gender=(String)getValueProperty(getFFConstant().gender);
		
		HashMap fields=new HashMap();
		fields.put(getFFConstant().firstName,firstName);
		fields.put(getFFConstant().lastName,lastName);
		fields.put(getFFConstant().email,email);
		fields.put(getFFConstant().password,password);
		fields.put(getFFConstant().confirmPassword, confirmPassword);
		fields.put(getFFConstant().country,country);
		fields.put(getFFConstant().state, state);
		fields.put(getFFConstant().city, city);
		fields.put(getFFConstant().zipCode, zipcode);
		fields.put(getFFConstant().gender, gender);
		fields.put(getFFConstant().login, login);
		
		getFFUtils().validateFields(fields);
		
		HashMap error=getFFUtils().getErrorInfo();
		
		putErrorMessage(error);
		
		return checkFormRedirect(getSuccessURL(),getErrorURL(),pRequest,pResponse);
	}
	public void putErrorMessage(HashMap error)
	{
		Set set=error.entrySet();
		Iterator iterate=set.iterator();
		while(iterate.hasNext())
		{
			Map.Entry entry=(Entry) iterate.next();
			final ResourceBundle resourceBundle=ResourceBundle.getBundle("com.ff.ErrorMessage");
			String errorCode=entry.getValue().toString();
			String errorMessage= ResourceUtils.getMsgResource(errorCode, "com.ff.ErrorMessage", resourceBundle);
			addFormException(new DropletException(MessageFormat.format(errorMessage, entry.getKey().toString())));
		}
	}
	public FFConstant getFFConstant() {
		return FFConstant;
	}
	public void setFFConstant(FFConstant constant) {
		FFConstant = constant;
	}
}
